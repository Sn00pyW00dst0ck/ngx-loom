var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/DagreLayout.html",[0,0.418,1,1.421]],["body/classes/DagreLayout.html",[0,0.266,1,1.383,2,0.905,3,0.557,4,0.557,5,0.472,6,0.829,7,0.905,8,0.328,9,0.721,10,3.298,11,2.525,12,2.419,13,2.419,14,2.419,15,1.542,16,1.677,17,1.542,18,1.994,19,1.717,20,1.717,21,0.065,22,1.883,23,1.653,24,0.979,25,1.653,26,1.653,27,2.022,28,2.405,29,1.994,30,2.708,31,1.542,32,2.708,33,2.419,34,1.877,35,2.419,36,2.419,37,1.644,38,2.916,39,2.232,40,2.916,41,1.653,42,1.653,43,1.653,44,1.653,45,1.033,46,2.218,47,0.933,48,0.885,49,1.306,50,2.419,51,1.213,52,0.472,53,2.232,54,1.383,55,1.076,56,0.875,57,1.156,58,1.076,59,1.076,60,1.076,61,1.076,62,1.076,63,1.076,64,1.076,65,1.076,66,1.994,67,1.644,68,0.905,69,0.472,70,1.076,71,1.076,72,1.076,73,1.076,74,1.076,75,1.076,76,1.076,77,1.076,78,1.076,79,1.306,80,0.328,81,1.245,82,1.994,83,1.306,84,1.306,85,1.994,86,1.306,87,1.306,88,1.306,89,1.306,90,1.306,91,0.655,92,1.994,93,2.232,94,1.542,95,3.506,96,2.419,97,1.306,98,1.306,99,1.306,100,1.306,101,1.306,102,1.306,103,2.419,104,2.419,105,1.306,106,1.306,107,0.655,108,1.306,109,0.655,110,1.306,111,1.306,112,0.655,113,1.306,114,0.655,115,1.306,116,2.419,117,1.306,118,1.306,119,1.306,120,1.306,121,1.306,122,1.383,123,1.306,124,0.655,125,1.306,126,1.306,127,1.994,128,1.306,129,1.306,130,1.306,131,1.994,132,2.419,133,1.306,134,1.306,135,1.306,136,1.306,137,1.306,138,1.306,139,1.306,140,1.306,141,1.306,142,1.306,143,1.306,144,1.306,145,1.306,146,1.306,147,1.306,148,1.306,149,1.994,150,1.306,151,1.306,152,1.994,153,1.306,154,1.306,155,1.306,156,1.306,157,1.306,158,1.306,159,1.306,160,1.306,161,1.306,162,1.306,163,1.306,164,1.306,165,1.306,166,1.994,167,1.994,168,0.655,169,1.306,170,1.306,171,0.031,172,0.031]],["title/interfaces/DagreSettings.html",[27,1.421,80,0.515]],["body/interfaces/DagreSettings.html",[0,0.258,1,0.877,3,0.54,4,0.54,5,0.458,6,0.318,7,0.877,8,0.318,9,0.704,10,1.947,12,1.265,13,1.265,14,1.265,15,0.976,16,0.877,17,1.442,18,1.043,21,0.064,24,1.258,27,1.847,28,2.761,29,1.265,30,3.037,31,1.336,32,3.037,33,2.875,34,1.35,35,2.875,36,2.875,37,1.043,38,3.163,39,1.605,40,3.163,45,1.013,46,2.264,47,0.922,48,0.873,49,1.265,50,2.372,51,1.19,52,0.458,53,2.196,54,1.35,55,1.043,56,0.963,57,1.137,58,1.043,59,1.043,60,1.043,61,1.043,62,1.043,63,1.043,64,1.043,65,1.043,66,2.504,67,2.196,68,0.877,69,0.458,70,1.043,71,1.043,72,1.043,73,1.043,74,1.043,75,1.043,76,1.043,77,1.043,78,1.605,79,1.947,80,0.318,81,1.558,82,2.875,83,2.372,84,2.372,85,2.875,86,2.372,87,2.372,88,2.372,89,2.372,90,2.372,91,1.19,92,3.037,93,2.196,94,1.523,95,3.479,96,2.372,97,1.265,98,1.265,99,1.265,100,1.265,101,1.265,102,1.265,103,2.372,104,2.372,105,1.265,106,1.265,107,0.635,108,1.265,109,0.635,110,1.265,111,1.265,112,0.635,113,1.265,114,0.635,115,1.265,116,2.372,117,1.265,118,1.265,119,1.265,120,1.265,121,1.265,122,1.35,123,1.265,124,0.635,125,1.265,126,1.265,127,1.947,128,1.265,129,1.265,130,1.265,131,1.947,132,2.372,133,1.265,134,1.265,135,1.265,136,1.265,137,1.265,138,1.265,139,1.265,140,1.265,141,1.265,142,1.265,143,1.265,144,1.265,145,1.265,146,1.265,147,1.265,148,1.265,149,1.947,150,1.265,151,1.265,152,1.947,153,1.265,154,1.265,155,1.265,156,1.265,157,1.265,158,1.265,159,1.265,160,1.265,161,1.265,162,1.265,163,1.265,164,1.265,165,1.265,166,1.947,167,1.947,168,0.635,169,1.265,170,1.265,171,0.03,172,0.03,173,0.877,174,0.635,175,3.144]],["title/classes/Edge.html",[0,0.418,48,0.622]],["body/classes/Edge.html",[0,0.421,2,0.949,3,0.584,4,1.184,5,0.495,6,0.841,8,0.344,9,0.747,15,1.958,17,1.036,19,1.843,20,1.843,21,0.065,22,1.913,24,1.21,31,1.036,45,0.882,47,1.103,48,1.154,51,1.249,52,0.495,56,1.132,57,1.184,69,0.495,80,0.626,81,1.534,91,1.036,94,1.036,107,1.391,109,1.391,112,1.036,114,1.036,124,1.249,168,0.686,171,0.032,172,0.032,174,0.686,176,0.806,177,1.726,178,1.216,179,1.249,180,1.726,181,2.459,182,2.254,183,2.064,184,2.064,185,1.726,186,1.726,187,2.587,188,1.97,189,1.733,190,1.726,191,1.466,192,2.171,193,1.726,194,1.726,195,1.733,196,1.726,197,1.733,198,1.726,199,1.433,200,1.216,201,1.368,202,1.733,203,1.433,204,1.216,205,1.433,206,1.733,207,1.433,208,1.733,209,1.433,210,1.733,211,1.036,212,0.949,213,0.949,214,0.949,215,0.949,216,1.433,217,0.949,218,0.949,219,1.249,220,0.949,221,0.949,222,0.806,223,1.466,224,0.949,225,0.949,226,0.949,227,0.949,228,0.806,229,0.686,230,0.949,231,0.949,232,0.949,233,0.949,234,0.949,235,0.584,236,0.949,237,0.949,238,0.949]],["title/interfaces/Layout.html",[80,0.515,219,1.028]],["body/interfaces/Layout.html",[0,0.452,3,0.642,4,0.946,5,0.543,6,0.662,8,0.378,9,0.801,15,1.838,16,1.536,17,1.626,18,1.827,21,0.065,22,1.304,24,0.952,31,1.111,45,0.946,47,1.143,48,1.174,51,1.554,52,0.543,56,1.172,57,1.24,69,0.543,80,0.73,81,1.565,91,0.754,93,1.827,94,1.626,107,1.457,109,1.457,112,1.111,114,1.111,124,1.32,168,0.754,171,0.035,172,0.035,173,1.042,174,0.754,175,2.395,176,0.885,177,1.536,178,0.885,179,1.111,180,1.536,181,2.248,182,2.014,183,1.536,184,1.536,185,1.042,186,1.042,187,2.477,188,1.908,190,1.536,191,1.304,192,2.148,193,1.536,194,1.536,196,1.536,198,1.536,199,1.042,200,0.885,203,1.042,204,0.885,205,1.042,207,1.042,209,1.042,211,1.111,212,1.042,213,1.042,214,1.042,215,1.042,216,1.536,217,1.042,218,1.042,219,1.626,220,1.536,221,1.536,222,1.304,223,1.55,224,1.536,225,1.536,226,1.042,227,1.042,228,0.885,229,0.754,230,1.042,231,1.042,232,1.042,233,1.042,234,1.042,235,0.642,236,1.042,237,1.042,238,1.042,239,1.827,240,1.903,241,2.216,242,2.216,243,2.216,244,1.903]],["title/interfaces/Matrix.html",[80,0.515,235,0.875]],["body/interfaces/Matrix.html",[0,0.459,3,0.656,4,0.962,5,0.556,6,0.386,8,0.386,9,0.814,15,1.847,17,1.13,21,0.065,24,1.181,31,1.13,45,0.962,47,1.105,48,1.118,51,1.337,52,0.556,56,1.13,57,1.254,69,1.062,80,0.67,81,1.678,91,0.771,94,1.13,107,1.473,109,1.473,112,1.13,114,1.13,124,1.337,168,1.473,171,0.035,172,0.035,173,1.065,174,0.771,176,0.905,177,1.562,178,0.905,179,1.13,180,1.562,181,2.265,182,2.036,183,1.562,184,1.562,185,1.065,186,1.065,187,2.49,188,1.923,190,1.562,191,1.326,192,2.036,193,1.562,194,1.562,196,1.562,198,1.562,199,1.065,200,0.905,203,1.065,204,0.905,205,1.065,207,1.065,209,1.065,211,1.13,212,1.065,213,1.065,214,1.065,215,1.065,216,1.849,217,1.065,218,1.065,219,1.337,220,1.065,221,1.065,222,0.905,223,1.57,224,1.065,225,1.065,226,1.562,227,1.562,228,1.326,229,1.13,230,1.562,231,1.562,232,1.562,233,1.562,234,1.562,235,0.962,236,2.036,237,2.036,238,2.036]],["title/directives/MouseWheelDirective.html",[245,1.421,246,1.69]],["body/directives/MouseWheelDirective.html",[0,0.311,3,0.652,4,0.652,5,0.552,6,0.901,8,0.384,21,0.064,22,2.076,24,1.179,39,1.849,45,0.652,52,0.552,54,1.555,57,0.652,122,1.555,171,0.035,172,0.035,174,1.125,175,2.778,211,0.766,223,1.724,239,1.849,241,3.37,242,3.37,243,2.928,245,2.03,246,1.849,247,1.934,248,1.527,249,2.84,250,2.84,251,4.129,252,4.129,253,3.456,254,2.84,255,2.84,256,1.934,257,2.84,258,4.78,259,2.84,260,2.84,261,2.84,262,2.84,263,2.84,264,2.84,265,3.366,266,3.366,267,2.84,268,2.84,269,2.84,270,3.95,271,1.934,272,3.708,273,2.84,274,3.708,275,2.84,276,1.934,277,2.84,278,3.366,279,3.929,280,2.84,281,4.467,282,3.366,283,2.84,284,3.366,285,2.84,286,3.708,287,2.84,288,1.934,289,2.84,290,2.243,291,2.84,292,2.84,293,2.84,294,2.84,295,3.708,296,2.84,297,3.366,298,2.84,299,2.84,300,2.84,301,2.84,302,2.84,303,2.657,304,1.934,305,3.366,306,2.84,307,1.934,308,1.934,309,1.934,310,3.366,311,1.934,312,1.527,313,1.934,314,1.934,315,1.934,316,1.934]],["title/classes/Node.html",[0,0.418,47,0.622]],["body/classes/Node.html",[0,0.43,2,0.973,3,0.599,4,0.899,5,0.508,6,0.795,8,0.353,9,0.762,15,1.939,17,1.057,19,1.772,20,1.772,21,0.065,22,1.772,24,1.186,31,1.409,45,0.899,47,1.152,48,1.097,51,1.268,52,0.508,56,1.143,57,1.199,69,0.508,80,0.636,81,1.543,91,0.704,94,1.057,107,1.586,109,1.586,112,1.268,114,1.268,124,1.644,168,0.704,171,0.033,172,0.033,174,0.704,176,0.826,177,1.753,178,0.826,179,1.268,180,1.753,181,2.392,182,2.273,183,1.461,184,1.461,185,0.973,186,0.973,187,2.558,188,1.985,190,1.753,191,1.488,192,2.088,193,1.753,194,1.753,196,1.753,198,1.753,199,0.973,200,0.826,201,2.107,203,0.973,204,0.826,205,0.973,207,0.973,209,0.973,211,1.409,212,1.461,213,1.461,214,1.753,215,1.461,216,1.753,217,1.461,218,1.753,219,1.268,220,0.973,221,0.973,222,0.826,223,1.488,224,0.973,225,0.973,226,0.973,227,0.973,228,0.826,229,0.704,230,0.973,231,0.973,232,0.973,233,0.973,234,0.973,235,0.599,236,0.973,237,0.973,238,0.973,317,1.778,318,1.778,319,1.778,320,1.778,321,1.778]],["title/coverage.html",[322,2.758]],["body/coverage.html",[0,0.712,1,1.804,5,0.941,6,0.992,7,2.231,21,0.062,24,0.941,27,1.804,34,2.423,37,2.145,47,0.79,48,0.79,80,0.878,122,1.804,171,0.05,172,0.05,176,2.149,211,1.305,219,1.305,229,1.305,235,1.111,245,1.804,246,2.145,248,2.602,322,2.602,323,2.145,324,3.295,325,3.295,326,3.295,327,3.295,328,3.295,329,3.295,330,3.295,331,3.295,332,3.295,333,3.295,334,3.295,335,3.295,336,3.295,337,3.295,338,3.295,339,3.295,340,2.602,341,3.295,342,2.602,343,3.295,344,3.295,345,3.295]],["title/dependencies.html",[346,1.731,347,2.454]],["body/dependencies.html",[21,0.064,46,1.911,52,0.996,171,0.052,172,0.052,188,1.622,235,1.176,347,2.756,348,3.49,349,5.009,350,3.49,351,3.49,352,3.49,353,4.221,354,4.221,355,3.49,356,3.49,357,3.49,358,3.49,359,3.49,360,3.49,361,3.49,362,3.49,363,3.49,364,3.49,365,3.49,366,3.49,367,3.49,368,3.49]],["title/miscellaneous/enumerations.html",[369,1.2,370,2.454]],["body/miscellaneous/enumerations.html",[6,0.68,7,1.875,8,0.68,20,2.337,21,0.062,28,2.717,46,2.285,53,2.717,54,2.285,55,2.23,56,1.192,58,2.23,59,2.23,60,2.23,61,2.23,62,2.23,63,2.23,64,2.23,65,2.23,66,2.23,67,2.717,68,1.875,69,0.978,70,2.23,71,2.23,72,2.23,73,2.23,74,2.23,75,2.23,76,2.23,77,2.23,171,0.051,172,0.051,369,1.875,370,2.705,371,4.174]],["title/index.html",[8,0.435,372,1.731,373,1.731]],["body/index.html",[16,2.028,19,1.493,21,0.046,34,1.258,47,0.77,48,0.77,56,1.206,68,1.258,171,0.04,172,0.04,178,1.493,179,1.467,191,1.493,200,1.493,204,1.068,222,1.068,228,2.281,239,1.496,253,1.814,303,1.814,323,2.983,374,4.847,375,3.213,376,2.297,377,2.297,378,2.297,379,2.297,380,1.814,381,2.297,382,3.213,383,2.297,384,2.297,385,2.297,386,2.297,387,4.222,388,3.213,389,2.297,390,2.297,391,2.537,392,4.375,393,2.297,394,2.297,395,2.297,396,2.297,397,3.705,398,3.213,399,2.297,400,2.297,401,3.213,402,2.297,403,2.297,404,2.297,405,2.297,406,2.297,407,2.297,408,2.297,409,2.297,410,2.297,411,2.297,412,2.297,413,2.297,414,4.012,415,3.213,416,2.297,417,2.297,418,2.297,419,2.297,420,2.297,421,2.297,422,2.297,423,2.297,424,2.297,425,2.297,426,2.297,427,3.705,428,3.213,429,3.213,430,4.716,431,4.582,432,2.297,433,4.375,434,4.012,435,2.297,436,2.297,437,3.213,438,2.297,439,4.491,440,2.297,441,2.297,442,3.213,443,2.297,444,3.213,445,2.297,446,2.297,447,2.297,448,1.814,449,2.297,450,2.297,451,2.297,452,2.297,453,3.213,454,2.297,455,2.297,456,4.012,457,4.012,458,4.012,459,2.297,460,3.213,461,3.213,462,2.297,463,2.297,464,2.297,465,2.297,466,2.297,467,1.814,468,2.297,469,2.297,470,2.297,471,2.297,472,2.297,473,2.297,474,2.297,475,2.297,476,2.297,477,2.297,478,2.297,479,1.814,480,2.297]],["title/license.html",[372,1.731,373,1.731,481,1.731]],["body/license.html",[21,0.049,69,0.893,78,2.568,171,0.049,172,0.049,279,2.47,290,2.47,323,2.036,380,2.47,391,2.47,448,3.413,467,2.47,481,2.47,482,3.128,483,4.322,484,3.128,485,3.128,486,3.128,487,3.945,488,3.128,489,3.128,490,3.128,491,3.128,492,3.128,493,3.128,494,3.945,495,4.952,496,3.128,497,3.128,498,3.128,499,3.128,500,3.945,501,3.128,502,3.128,503,3.128,504,3.128,505,3.128,506,3.128,507,3.128,508,3.128,509,3.128,510,3.945,511,3.128,512,3.128,513,3.128,514,3.128,515,3.128,516,3.945,517,3.945,518,3.128,519,3.128,520,3.128,521,3.128,522,3.128,523,3.128,524,3.128,525,3.128,526,3.128,527,3.128,528,3.128,529,3.128,530,3.128,531,3.128,532,3.128,533,3.128,534,3.128,535,3.128,536,3.128,537,3.128,538,3.128,539,3.128,540,3.128,541,3.128,542,3.128,543,3.128,544,3.128,545,3.128]],["title/modules.html",[546,2.758]],["body/modules.html",[21,0.056,171,0.056,172,0.056,546,3.174]],["title/overview.html",[547,2.758]],["body/overview.html",[2,2.147,21,0.056,171,0.056,172,0.056,173,2.147,229,1.553,245,2.147,312,3.571,547,3.097,548,4.523]],["title/properties.html",[9,0.887,346,1.731]],["body/properties.html",[9,1.137,21,0.059,171,0.056,172,0.056,479,3.144,549,3.982]],["title/miscellaneous/variables.html",[369,1.2,550,2.454]],["body/miscellaneous/variables.html",[6,0.724,8,0.724,19,1.695,20,2.304,21,0.062,81,1.613,171,0.053,172,0.053,179,1.444,340,2.879,342,3.422,369,1.996,550,2.879,551,3.647,552,4.334,553,4.785,554,3.647,555,4.334]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{}}}],["0.0.0",{"_index":549,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["0.8.5",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["0/8",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":312,"title":{},"body":{"directives/MouseWheelDirective.html":{},"overview.html":{}}}],["1/1",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":34,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"coverage.html":{},"index.html":{}}}],["14",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":376,"title":{},"body":{"index.html":{}}}],["17.3.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["17.3.6",{"_index":480,"title":{},"body":{"index.html":{}}}],["2.16.1",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":31,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["2024",{"_index":484,"title":{},"body":{"license.html":{}}}],["3",{"_index":548,"title":{},"body":{"overview.html":{}}}],["38/41",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["5.0.7",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":37,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"coverage.html":{}}}],["6/6",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["7.8.5",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["ability",{"_index":392,"title":{},"body":{"index.html":{}}}],["above",{"_index":290,"title":{},"body":{"directives/MouseWheelDirective.html":{},"license.html":{}}}],["action",{"_index":538,"title":{},"body":{"license.html":{}}}],["actually",{"_index":221,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["acyclicer",{"_index":82,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["add",{"_index":249,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["aldous",{"_index":486,"title":{},"body":{"license.html":{}}}],["align",{"_index":66,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["alignment",{"_index":67,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["allows",{"_index":406,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":508,"title":{},"body":{"license.html":{}}}],["angular",{"_index":375,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":52,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["applicaiton",{"_index":436,"title":{},"body":{"index.html":{}}}],["application",{"_index":431,"title":{},"body":{"index.html":{}}}],["apply",{"_index":133,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["args",{"_index":165,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["arguments",{"_index":278,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["arising",{"_index":542,"title":{},"body":{"license.html":{}}}],["arrow",{"_index":123,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["associated",{"_index":496,"title":{},"body":{"license.html":{}}}],["authors",{"_index":531,"title":{},"body":{"license.html":{}}}],["auto",{"_index":412,"title":{},"body":{"index.html":{}}}],["available",{"_index":428,"title":{},"body":{"index.html":{}}}],["b",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["bind",{"_index":409,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["bottom_to_tom",{"_index":64,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["browser",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["bt",{"_index":65,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["build",{"_index":429,"title":{},"body":{"index.html":{}}}],["build:demo:dev",{"_index":432,"title":{},"body":{"index.html":{}}}],["build:demo:prod",{"_index":435,"title":{},"body":{"index.html":{}}}],["build:loom:dev",{"_index":438,"title":{},"body":{"index.html":{}}}],["build:loom:prod",{"_index":440,"title":{},"body":{"index.html":{}}}],["building",{"_index":451,"title":{},"body":{"index.html":{}}}],["builds",{"_index":433,"title":{},"body":{"index.html":{}}}],["built",{"_index":447,"title":{},"body":{"index.html":{}}}],["c",{"_index":69,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["calculations",{"_index":231,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["cd",{"_index":424,"title":{},"body":{"index.html":{}}}],["center",{"_index":68,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["charge",{"_index":491,"title":{},"body":{"license.html":{}}}],["chrome",{"_index":284,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["claim",{"_index":534,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DagreLayout.html":{},"classes/Edge.html":{},"classes/Node.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DagreLayout.html":{},"classes/Edge.html":{},"classes/Node.html":{},"overview.html":{}}}],["cli",{"_index":478,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":411,"title":{},"body":{"index.html":{}}}],["clone",{"_index":421,"title":{},"body":{"index.html":{}}}],["command",{"_index":386,"title":{},"body":{"index.html":{}}}],["commands",{"_index":416,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":377,"title":{},"body":{"index.html":{}}}],["completing",{"_index":449,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":465,"title":{},"body":{"index.html":{}}}],["compodoc:build",{"_index":471,"title":{},"body":{"index.html":{}}}],["compodoc:serve",{"_index":473,"title":{},"body":{"index.html":{}}}],["component",{"_index":229,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{},"overview.html":{}}}],["compound",{"_index":40,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["comprehensive",{"_index":475,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":515,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":434,"title":{},"body":{"index.html":{}}}],["connection",{"_index":544,"title":{},"body":{"license.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["constrain",{"_index":342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constrains",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["construct",{"_index":79,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["contract",{"_index":539,"title":{},"body":{"license.html":{}}}],["convert",{"_index":289,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["copies",{"_index":510,"title":{},"body":{"license.html":{}}}],["copy",{"_index":494,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":483,"title":{},"body":{"license.html":{}}}],["correct",{"_index":217,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["coverage",{"_index":322,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":464,"title":{},"body":{"index.html":{}}}],["createdagregraph",{"_index":11,"title":{},"body":{"classes/DagreLayout.html":{}}}],["css",{"_index":215,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["currently",{"_index":389,"title":{},"body":{"index.html":{}}}],["custom",{"_index":404,"title":{},"body":{"index.html":{}}}],["d",{"_index":237,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["d3",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["dagre",{"_index":46,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["dagre.graphlib.graph",{"_index":130,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagre.layout(dagregraph",{"_index":98,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagreedges",{"_index":12,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph",{"_index":96,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph._nodes",{"_index":100,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph._nodes[dagrenodeid",{"_index":102,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph.setdefaultedgelabel",{"_index":148,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph.setedge(...args",{"_index":170,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph.setgraph",{"_index":134,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagregraph.setnode(n.id",{"_index":162,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrelayout",{"_index":1,"title":{"classes/DagreLayout.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"coverage.html":{}}}],["dagrenode",{"_index":101,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenode.height",{"_index":115,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenode.id",{"_index":105,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenode.width",{"_index":113,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenode.x",{"_index":108,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenode.y",{"_index":110,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenodeid",{"_index":99,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagrenodes",{"_index":13,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["dagresettings",{"_index":27,"title":{"interfaces/DagreSettings.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"coverage.html":{}}}],["damages",{"_index":535,"title":{},"body":{"license.html":{}}}],["deal",{"_index":498,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":545,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":297,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["default",{"_index":19,"title":{},"body":{"classes/DagreLayout.html":{},"classes/Edge.html":{},"classes/Node.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultsettings",{"_index":14,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DagreLayout.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["delta",{"_index":310,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["demo",{"_index":430,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":347,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":199,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["description",{"_index":174,"title":{},"body":{"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["determine",{"_index":121,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["development",{"_index":414,"title":{},"body":{"index.html":{}}}],["differentiate",{"_index":193,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["dimension",{"_index":214,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["dir",{"_index":125,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["directed",{"_index":178,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{}}}],["directive",{"_index":245,"title":{"directives/MouseWheelDirective.html":{}},"body":{"directives/MouseWheelDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":247,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["directory",{"_index":472,"title":{},"body":{"index.html":{}}}],["display",{"_index":395,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":402,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":506,"title":{},"body":{"license.html":{}}}],["dl",{"_index":75,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["docs",{"_index":469,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":323,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dommousescroll",{"_index":268,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["down",{"_index":275,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["down_left",{"_index":74,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["down_right",{"_index":76,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["dr",{"_index":77,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":168,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["e.id",{"_index":169,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["e.source",{"_index":166,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["e.target",{"_index":167,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["easily",{"_index":381,"title":{},"body":{"index.html":{}}}],["edge",{"_index":48,"title":{"classes/Edge.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{},"index.html":{}}}],["edge.source",{"_index":118,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["edge.target",{"_index":120,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["edgepadding",{"_index":33,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["edges",{"_index":94,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["edgesep",{"_index":139,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["emits",{"_index":272,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["emitted",{"_index":293,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["ends",{"_index":209,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["engine",{"_index":408,"title":{},"body":{"index.html":{}}}],["enum",{"_index":53,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":370,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":279,"title":{},"body":{"directives/MouseWheelDirective.html":{},"license.html":{}}}],["event.detail",{"_index":315,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.wheeldelta",{"_index":314,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":270,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["events",{"_index":253,"title":{},"body":{"directives/MouseWheelDirective.html":{},"index.html":{}}}],["example",{"_index":419,"title":{},"body":{"index.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":255,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["exposed",{"_index":413,"title":{},"body":{"index.html":{}}}],["express",{"_index":523,"title":{},"body":{"license.html":{}}}],["f",{"_index":238,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["fail",{"_index":452,"title":{},"body":{"index.html":{}}}],["features",{"_index":388,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{}}}],["files",{"_index":497,"title":{},"body":{"license.html":{}}}],["fired",{"_index":294,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["firefox",{"_index":282,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["first",{"_index":446,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":528,"title":{},"body":{"license.html":{}}}],["five",{"_index":426,"title":{},"body":{"index.html":{}}}],["following",{"_index":391,"title":{},"body":{"index.html":{},"license.html":{}}}],["form",{"_index":292,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["four",{"_index":454,"title":{},"body":{"index.html":{}}}],["free",{"_index":490,"title":{},"body":{"license.html":{}}}],["furnished",{"_index":513,"title":{},"body":{"license.html":{}}}],["gabriel",{"_index":485,"title":{},"body":{"license.html":{}}}],["generate",{"_index":204,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{}}}],["generated",{"_index":191,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{}}}],["getting",{"_index":372,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":420,"title":{},"body":{"index.html":{}}}],["given",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":489,"title":{},"body":{"license.html":{}}}],["graph",{"_index":56,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["graphcomponent",{"_index":220,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["greedy",{"_index":83,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["h",{"_index":114,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["headless",{"_index":460,"title":{},"body":{"index.html":{}}}],["height",{"_index":213,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["hereby",{"_index":488,"title":{},"body":{"license.html":{}}}],["holders",{"_index":532,"title":{},"body":{"license.html":{}}}],["hostlistener",{"_index":304,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":300,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":298,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":302,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlisteners",{"_index":267,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["https://github.com/sn00pyw00dst0ck/ng",{"_index":422,"title":{},"body":{"index.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":254,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["ibuild",{"_index":425,"title":{},"body":{"index.html":{}}}],["id",{"_index":181,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["identifier",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":286,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["implement",{"_index":403,"title":{},"body":{"index.html":{}}}],["implied",{"_index":524,"title":{},"body":{"license.html":{}}}],["import",{"_index":45,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["improve",{"_index":476,"title":{},"body":{"index.html":{}}}],["included",{"_index":518,"title":{},"body":{"license.html":{}}}],["including",{"_index":500,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["install",{"_index":384,"title":{},"body":{"index.html":{}}}],["installation",{"_index":383,"title":{},"body":{"index.html":{}}}],["interface",{"_index":80,"title":{"interfaces/DagreSettings.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{}}}],["interface/loom.interface",{"_index":49,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["interfaces",{"_index":173,"title":{},"body":{"interfaces/DagreSettings.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"overview.html":{}}}],["internally",{"_index":227,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["kind",{"_index":522,"title":{},"body":{"license.html":{}}}],["label",{"_index":182,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["layout",{"_index":219,"title":{"interfaces/Layout.html":{}},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{}}}],["layouts",{"_index":405,"title":{},"body":{"index.html":{}}}],["left_to_right",{"_index":58,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["liability",{"_index":536,"title":{},"body":{"license.html":{}}}],["liable",{"_index":533,"title":{},"body":{"license.html":{}}}],["library",{"_index":378,"title":{},"body":{"index.html":{}}}],["license",{"_index":481,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":501,"title":{},"body":{"license.html":{}}}],["limited",{"_index":525,"title":{},"body":{"license.html":{}}}],["line",{"_index":183,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["linux",{"_index":417,"title":{},"body":{"index.html":{}}}],["listens",{"_index":281,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["literal",{"_index":201,"title":{},"body":{"classes/Edge.html":{},"classes/Node.html":{}}}],["localhost",{"_index":443,"title":{},"body":{"index.html":{}}}],["localhost:5555",{"_index":474,"title":{},"body":{"index.html":{}}}],["longest",{"_index":90,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["loom",{"_index":228,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{}}}],["loom.git",{"_index":423,"title":{},"body":{"index.html":{}}}],["loom/src/lib/interface/loom.interface.ts",{"_index":176,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{}}}],["loom/src/lib/interface/loom.interface.ts:11",{"_index":318,"title":{},"body":{"classes/Node.html":{}}}],["loom/src/lib/interface/loom.interface.ts:15",{"_index":320,"title":{},"body":{"classes/Node.html":{}}}],["loom/src/lib/interface/loom.interface.ts:19",{"_index":317,"title":{},"body":{"classes/Node.html":{}}}],["loom/src/lib/interface/loom.interface.ts:23",{"_index":319,"title":{},"body":{"classes/Node.html":{}}}],["loom/src/lib/interface/loom.interface.ts:27",{"_index":321,"title":{},"body":{"classes/Node.html":{}}}],["loom/src/lib/interface/loom.interface.ts:37",{"_index":189,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:41",{"_index":206,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:45",{"_index":208,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:49",{"_index":195,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:53",{"_index":202,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:57",{"_index":197,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:58",{"_index":210,"title":{},"body":{"classes/Edge.html":{}}}],["loom/src/lib/interface/loom.interface.ts:74",{"_index":240,"title":{},"body":{"interfaces/Layout.html":{}}}],["loom/src/lib/interface/loom.interface.ts:81",{"_index":244,"title":{},"body":{"interfaces/Layout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts",{"_index":7,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:102",{"_index":23,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:47",{"_index":41,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:57",{"_index":43,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:59",{"_index":26,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:60",{"_index":25,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:62",{"_index":42,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/layouts/dagre.layout.ts:82",{"_index":44,"title":{},"body":{"classes/DagreLayout.html":{}}}],["loom/src/lib/loom/loom.component.ts",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["loom/src/lib/mousewheel.directive.ts",{"_index":248,"title":{},"body":{"directives/MouseWheelDirective.html":{},"coverage.html":{}}}],["loom/src/lib/mousewheel.directive.ts:14",{"_index":276,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["loom/src/lib/mousewheel.directive.ts:19",{"_index":271,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["loom/src/lib/mousewheel.directive.ts:26",{"_index":283,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["loom/src/lib/mousewheel.directive.ts:35",{"_index":280,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["loom/src/lib/mousewheel.directive.ts:44",{"_index":285,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["loom/src/lib/mousewheel.directive.ts:53",{"_index":288,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["loom/src/lib/utils.ts",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loomcomponent",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["lr",{"_index":59,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["marginx",{"_index":30,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["marginy",{"_index":32,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["matching",{"_index":172,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max",{"_index":311,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":313,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["matrix",{"_index":235,"title":{"interfaces/Matrix.html":{}},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{},"dependencies.html":{}}}],["max",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":527,"title":{},"body":{"license.html":{}}}],["merge",{"_index":504,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":256,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["methods",{"_index":239,"title":{},"body":{"interfaces/Layout.html":{},"directives/MouseWheelDirective.html":{},"index.html":{}}}],["min",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":369,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":482,"title":{},"body":{"license.html":{}}}],["mode",{"_index":461,"title":{},"body":{"index.html":{}}}],["modify",{"_index":503,"title":{},"body":{"license.html":{}}}],["modules",{"_index":546,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":250,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mouse",{"_index":251,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":258,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":246,"title":{"directives/MouseWheelDirective.html":{}},"body":{"directives/MouseWheelDirective.html":{},"coverage.html":{}}}],["mousewheeldown",{"_index":265,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":260,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":287,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":266,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["multigraph",{"_index":38,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["n",{"_index":152,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["n.dimension.h",{"_index":156,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["n.dimension.w",{"_index":154,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["n.id",{"_index":104,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["n.position.x",{"_index":158,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["n.position.y",{"_index":160,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["name",{"_index":242,"title":{},"body":{"interfaces/Layout.html":{},"directives/MouseWheelDirective.html":{}}}],["nanoid",{"_index":188,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"dependencies.html":{}}}],["network",{"_index":86,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["new",{"_index":122,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"directives/MouseWheelDirective.html":{},"coverage.html":{}}}],["ng",{"_index":398,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":374,"title":{},"body":{"index.html":{}}}],["node",{"_index":47,"title":{"classes/Node.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"coverage.html":{},"index.html":{}}}],["node.dimension",{"_index":111,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["node.height",{"_index":155,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["node.position",{"_index":106,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["node.width",{"_index":153,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["node.x",{"_index":157,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["node.y",{"_index":159,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["nodepadding",{"_index":36,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["nodes",{"_index":93,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"interfaces/Layout.html":{}}}],["nodes.find(n",{"_index":103,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["nodes.map(n",{"_index":151,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["nodesep",{"_index":143,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["noninfringement",{"_index":530,"title":{},"body":{"license.html":{}}}],["note",{"_index":444,"title":{},"body":{"index.html":{}}}],["notice",{"_index":516,"title":{},"body":{"license.html":{}}}],["npm",{"_index":387,"title":{},"body":{"index.html":{}}}],["number",{"_index":81,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":127,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["obtaining",{"_index":493,"title":{},"body":{"license.html":{}}}],["old",{"_index":308,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel",{"_index":269,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome",{"_index":261,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":296,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox",{"_index":262,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":299,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie",{"_index":263,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":301,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["optional",{"_index":175,"title":{},"body":{"interfaces/DagreSettings.html":{},"interfaces/Layout.html":{},"directives/MouseWheelDirective.html":{}}}],["options",{"_index":54,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["order",{"_index":445,"title":{},"body":{"index.html":{}}}],["orient",{"_index":55,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":28,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["orientation.left_to_right",{"_index":29,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["others",{"_index":194,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["otherwise",{"_index":541,"title":{},"body":{"license.html":{}}}],["out",{"_index":543,"title":{},"body":{"license.html":{}}}],["output",{"_index":303,"title":{},"body":{"directives/MouseWheelDirective.html":{},"index.html":{}}}],["outputs",{"_index":264,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["overview",{"_index":547,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":394,"title":{},"body":{"index.html":{}}}],["package",{"_index":346,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":470,"title":{},"body":{"index.html":{}}}],["pan",{"_index":400,"title":{},"body":{"index.html":{}}}],["panning",{"_index":234,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["param",{"_index":223,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["parameters",{"_index":241,"title":{},"body":{"interfaces/Layout.html":{},"directives/MouseWheelDirective.html":{}}}],["particular",{"_index":529,"title":{},"body":{"license.html":{}}}],["path",{"_index":91,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["permission",{"_index":487,"title":{},"body":{"license.html":{}}}],["permit",{"_index":511,"title":{},"body":{"license.html":{}}}],["person",{"_index":492,"title":{},"body":{"license.html":{}}}],["persons",{"_index":512,"title":{},"body":{"license.html":{}}}],["points",{"_index":184,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["portions",{"_index":520,"title":{},"body":{"license.html":{}}}],["position",{"_index":124,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["production",{"_index":437,"title":{},"body":{"index.html":{}}}],["project",{"_index":439,"title":{},"body":{"index.html":{}}}],["projects/.../dagre.layout.ts",{"_index":371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../utils.ts",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"properties.html":{}}}],["property",{"_index":205,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["provided",{"_index":467,"title":{},"body":{"index.html":{},"license.html":{}}}],["provides",{"_index":390,"title":{},"body":{"index.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["publish",{"_index":505,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":380,"title":{},"body":{"index.html":{},"license.html":{}}}],["raised",{"_index":410,"title":{},"body":{"index.html":{}}}],["rankdir",{"_index":135,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["ranker",{"_index":85,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["rankpadding",{"_index":35,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["ranksep",{"_index":141,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["relating",{"_index":232,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["render",{"_index":222,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{}}}],["rendering",{"_index":200,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{}}}],["replacing",{"_index":407,"title":{},"body":{"index.html":{}}}],["represents",{"_index":177,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["restriction",{"_index":499,"title":{},"body":{"license.html":{}}}],["results",{"_index":171,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":116,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["returns",{"_index":243,"title":{},"body":{"interfaces/Layout.html":{},"directives/MouseWheelDirective.html":{}}}],["right_to_left",{"_index":60,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":502,"title":{},"body":{"license.html":{}}}],["rl",{"_index":61,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":16,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"interfaces/Layout.html":{},"index.html":{}}}],["run(nodes",{"_index":224,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["runs",{"_index":456,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["scripts",{"_index":427,"title":{},"body":{"index.html":{}}}],["scrolled",{"_index":274,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["selector",{"_index":257,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["sell",{"_index":509,"title":{},"body":{"license.html":{}}}],["sequence",{"_index":203,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["serve:demo",{"_index":441,"title":{},"body":{"index.html":{}}}],["serves",{"_index":442,"title":{},"body":{"index.html":{}}}],["settings",{"_index":17,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["settings.acyclicer",{"_index":146,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.align",{"_index":145,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.compound",{"_index":131,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.edgepadding",{"_index":140,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.marginx",{"_index":137,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.marginy",{"_index":138,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.multigraph",{"_index":132,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.nodepadding",{"_index":144,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.orientation",{"_index":136,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.ranker",{"_index":147,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["settings.rankpadding",{"_index":142,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["setup",{"_index":415,"title":{},"body":{"index.html":{}}}],["shall",{"_index":517,"title":{},"body":{"license.html":{}}}],["signal",{"_index":50,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["simplex",{"_index":87,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["simplify",{"_index":230,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["software",{"_index":495,"title":{},"body":{"license.html":{}}}],["sole",{"_index":379,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{}}}],["sourcenode",{"_index":117,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["sourcenode.position.y",{"_index":126,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["standalone",{"_index":259,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["standard",{"_index":291,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["started",{"_index":373,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":207,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["statements",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":450,"title":{},"body":{"index.html":{}}}],["string",{"_index":187,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["structure",{"_index":180,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["structures",{"_index":382,"title":{},"body":{"index.html":{}}}],["styles",{"_index":396,"title":{},"body":{"index.html":{}}}],["subject",{"_index":514,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":507,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":519,"title":{},"body":{"license.html":{}}}],["support",{"_index":309,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["svg",{"_index":198,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["table",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":185,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["targetnode",{"_index":119,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["tb",{"_index":63,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["templates",{"_index":399,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":418,"title":{},"body":{"index.html":{}}}],["test",{"_index":453,"title":{},"body":{"index.html":{}}}],["test:demo",{"_index":455,"title":{},"body":{"index.html":{}}}],["test:demo:headless",{"_index":459,"title":{},"body":{"index.html":{}}}],["test:loom",{"_index":462,"title":{},"body":{"index.html":{}}}],["test:loom:headless",{"_index":463,"title":{},"body":{"index.html":{}}}],["tests",{"_index":458,"title":{},"body":{"index.html":{}}}],["text",{"_index":196,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["textpath",{"_index":186,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["this.createdagregraph(nodes",{"_index":97,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["this.dagreedges",{"_index":163,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["this.dagreedges.foreach((e",{"_index":164,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["this.dagrenodes",{"_index":150,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["this.dagrenodes.foreach((n",{"_index":161,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["this.defaultsettings",{"_index":128,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["this.mousewheelfunc(event",{"_index":305,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":316,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.settings",{"_index":129,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["tight",{"_index":88,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["time",{"_index":477,"title":{},"body":{"index.html":{}}}],["top_to_bottom",{"_index":62,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["tort",{"_index":540,"title":{},"body":{"license.html":{}}}],["transform",{"_index":218,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["transformation",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["transforms",{"_index":216,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["tree",{"_index":89,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["true",{"_index":39,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"directives/MouseWheelDirective.html":{}}}],["tslib",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":466,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"directives/MouseWheelDirective.html":{},"classes/Node.html":{},"coverage.html":{}}}],["ul",{"_index":71,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":84,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["undirected",{"_index":393,"title":{},"body":{"index.html":{}}}],["unique",{"_index":190,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["unit",{"_index":457,"title":{},"body":{"index.html":{}}}],["up",{"_index":277,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["up_left",{"_index":70,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["up_right",{"_index":72,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":149,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{}}}],["updateedge",{"_index":18,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"interfaces/Layout.html":{}}}],["updateedge(nodes",{"_index":225,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["ur",{"_index":73,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"miscellaneous/enumerations.html":{}}}],["use",{"_index":78,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"license.html":{}}}],["used",{"_index":192,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["utilize",{"_index":385,"title":{},"body":{"index.html":{}}}],["utilized",{"_index":226,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["utilizing",{"_index":397,"title":{},"body":{"index.html":{}}}],["value",{"_index":20,"title":{},"body":{"classes/DagreLayout.html":{},"classes/Edge.html":{},"classes/Node.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":306,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["variable",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":550,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":479,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":468,"title":{},"body":{"index.html":{}}}],["void",{"_index":295,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["w",{"_index":112,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["warranties",{"_index":526,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":521,"title":{},"body":{"license.html":{}}}],["wheel",{"_index":252,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheen",{"_index":273,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":537,"title":{},"body":{"license.html":{}}}],["width",{"_index":212,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["window.event",{"_index":307,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["within",{"_index":179,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":448,"title":{},"body":{"index.html":{},"license.html":{}}}],["writablesignal",{"_index":51,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["x",{"_index":107,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["y",{"_index":109,"title":{},"body":{"classes/DagreLayout.html":{},"interfaces/DagreSettings.html":{},"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}],["zone.js",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":401,"title":{},"body":{"index.html":{}}}],["zooming",{"_index":233,"title":{},"body":{"classes/Edge.html":{},"interfaces/Layout.html":{},"interfaces/Matrix.html":{},"classes/Node.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DagreLayout.html":{"url":"classes/DagreLayout.html","title":"class - DagreLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/layouts/dagre.layout.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createDagreGraph\n                            \n                            \n                                    Private\n                                dagreEdges\n                            \n                            \n                                    Private\n                                dagreNodes\n                            \n                            \n                                defaultSettings\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                settings\n                            \n                            \n                                    Public\n                                updateEdge\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDagreGraph\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dagreEdges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dagreNodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DagreSettings\n\n                    \n                \n                \n                    \n                        Default value : {\n        orientation: Orientation.LEFT_TO_RIGHT,\n        marginX: 20,\n        marginY: 20,\n        edgePadding: 100,\n        rankPadding: 100,\n        nodePadding: 50,\n        multigraph: true,\n        compound: true\n    }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        run\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DagreSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateEdge\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/layouts/dagre.layout.ts:82\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport { Node, Edge } from \"../interface/loom.interface\";\nimport { Signal, WritableSignal, signal } from '@angular/core';\n\n/**\n * Enum for options of how Dagre can orient the graph.\n */\nexport enum Orientation {\n    LEFT_TO_RIGHT = 'LR',\n    RIGHT_TO_LEFT = 'RL',\n    TOP_TO_BOTTOM = 'TB',\n    BOTTOM_TO_TOM = 'BT'\n};\n\n/**\n * Enum for options of how Dagre can align the graph.\n */\nexport enum Alignment {\n    CENTER = 'C',\n    UP_LEFT = 'UL',\n    UP_RIGHT = 'UR',\n    DOWN_LEFT = 'DL',\n    DOWN_RIGHT = 'DR'\n};\n\n/**\n * The settings Dagre should use to construct the graph. \n */\nexport interface DagreSettings {\n    orientation?: Orientation;\n    marginX?: number;\n    marginY?: number;\n    edgePadding?: number;\n    rankPadding?: number;\n    nodePadding?: number;\n    align?: Alignment;\n    acyclicer?: 'greedy' | undefined;\n    ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\n    multigraph?: boolean;\n    compound?: boolean;\n};\n\n/**\n * \n */\nexport class DagreLayout {\n    defaultSettings: DagreSettings = {\n        orientation: Orientation.LEFT_TO_RIGHT,\n        marginX: 20,\n        marginY: 20,\n        edgePadding: 100,\n        rankPadding: 100,\n        nodePadding: 50,\n        multigraph: true,\n        compound: true\n    };\n    settings: DagreSettings = {};\n\n    private dagreNodes: any;\n    private dagreEdges: any;\n\n    public run = (nodes: Node[], edges: Edge[]): WritableSignal => {\n        const dagreGraph = this.createDagreGraph(nodes, edges) as any;\n        dagre.layout(dagreGraph);\n\n        for (const dagreNodeId in dagreGraph._nodes) {\n            const dagreNode = dagreGraph._nodes[dagreNodeId];\n            const node = nodes.find(n => n.id === dagreNode.id)!;\n            node.position = {\n                x: dagreNode.x,\n                y: dagreNode.y\n            };\n            node.dimension = {\n                w: dagreNode.width,\n                h: dagreNode.height\n            };\n        }\n\n        return signal({ nodes, edges });\n    };\n\n    public updateEdge = (nodes: Node[], edges: Edge[], edge: Edge): WritableSignal => {\n        const sourceNode = nodes.find(n => n.id === edge.source)!;\n        const targetNode = nodes.find(n => n.id === edge.target)!;\n\n        // determine new arrow position\n        const dir = sourceNode.position.y  {\n        const settings = Object.assign({}, this.defaultSettings, this.settings);\n        const dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph }) as any;\n\n        // Apply the settings\n        dagreGraph.setGraph({\n            rankdir: settings.orientation,\n            marginx: settings.marginX,\n            marginy: settings.marginY,\n            edgesep: settings.edgePadding,\n            ranksep: settings.rankPadding,\n            nodesep: settings.nodePadding,\n            align: settings.align,\n            acyclicer: settings.acyclicer,\n            ranker: settings.ranker,\n            multigraph: settings.multigraph,\n            compound: settings.compound\n        });\n\n        dagreGraph.setDefaultEdgeLabel(() => { });\n\n        // update all dagre nodes\n        this.dagreNodes = nodes.map(n => {\n            const node: any = Object.assign({}, n);\n            node.width = n.dimension.w || 20;\n            node.height = n.dimension.h || 20;\n            node.x = n.position.x;\n            node.y = n.position.y;\n            return node;\n        });\n        this.dagreNodes.forEach((n: any) => dagreGraph.setNode(n.id, n));\n\n        // update all dagre edges\n        this.dagreEdges = edges;\n        this.dagreEdges.forEach((e: any) => {\n            const args = settings.multigraph ? [e.source, e.target, e, e.id] : [e.source, e.target];\n            dagreGraph.setEdge(...args);\n        });\n\n        return dagreGraph;\n    }\n};\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DagreSettings.html":{"url":"interfaces/DagreSettings.html","title":"interface - DagreSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DagreSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/layouts/dagre.layout.ts\n        \n\n\n            \n                Description\n            \n            \n                The settings Dagre should use to construct the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acyclicer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            align\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            compound\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            edgePadding\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            marginX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            marginY\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            multigraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodePadding\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orientation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ranker\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rankPadding\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acyclicer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acyclicer:     \"greedy\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"greedy\" | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        align\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        align:         Alignment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Alignment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compound:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edgePadding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edgePadding:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marginX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        marginX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marginY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        marginY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multigraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multigraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodePadding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodePadding:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:         Orientation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Orientation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ranker\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ranker:     \"network-simplex\" | \"tight-tree\" | \"longest-path\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"network-simplex\" | \"tight-tree\" | \"longest-path\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rankPadding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rankPadding:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\nimport { Node, Edge } from \"../interface/loom.interface\";\nimport { Signal, WritableSignal, signal } from '@angular/core';\n\n/**\n * Enum for options of how Dagre can orient the graph.\n */\nexport enum Orientation {\n    LEFT_TO_RIGHT = 'LR',\n    RIGHT_TO_LEFT = 'RL',\n    TOP_TO_BOTTOM = 'TB',\n    BOTTOM_TO_TOM = 'BT'\n};\n\n/**\n * Enum for options of how Dagre can align the graph.\n */\nexport enum Alignment {\n    CENTER = 'C',\n    UP_LEFT = 'UL',\n    UP_RIGHT = 'UR',\n    DOWN_LEFT = 'DL',\n    DOWN_RIGHT = 'DR'\n};\n\n/**\n * The settings Dagre should use to construct the graph. \n */\nexport interface DagreSettings {\n    orientation?: Orientation;\n    marginX?: number;\n    marginY?: number;\n    edgePadding?: number;\n    rankPadding?: number;\n    nodePadding?: number;\n    align?: Alignment;\n    acyclicer?: 'greedy' | undefined;\n    ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\n    multigraph?: boolean;\n    compound?: boolean;\n};\n\n/**\n * \n */\nexport class DagreLayout {\n    defaultSettings: DagreSettings = {\n        orientation: Orientation.LEFT_TO_RIGHT,\n        marginX: 20,\n        marginY: 20,\n        edgePadding: 100,\n        rankPadding: 100,\n        nodePadding: 50,\n        multigraph: true,\n        compound: true\n    };\n    settings: DagreSettings = {};\n\n    private dagreNodes: any;\n    private dagreEdges: any;\n\n    public run = (nodes: Node[], edges: Edge[]): WritableSignal => {\n        const dagreGraph = this.createDagreGraph(nodes, edges) as any;\n        dagre.layout(dagreGraph);\n\n        for (const dagreNodeId in dagreGraph._nodes) {\n            const dagreNode = dagreGraph._nodes[dagreNodeId];\n            const node = nodes.find(n => n.id === dagreNode.id)!;\n            node.position = {\n                x: dagreNode.x,\n                y: dagreNode.y\n            };\n            node.dimension = {\n                w: dagreNode.width,\n                h: dagreNode.height\n            };\n        }\n\n        return signal({ nodes, edges });\n    };\n\n    public updateEdge = (nodes: Node[], edges: Edge[], edge: Edge): WritableSignal => {\n        const sourceNode = nodes.find(n => n.id === edge.source)!;\n        const targetNode = nodes.find(n => n.id === edge.target)!;\n\n        // determine new arrow position\n        const dir = sourceNode.position.y  {\n        const settings = Object.assign({}, this.defaultSettings, this.settings);\n        const dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph }) as any;\n\n        // Apply the settings\n        dagreGraph.setGraph({\n            rankdir: settings.orientation,\n            marginx: settings.marginX,\n            marginy: settings.marginY,\n            edgesep: settings.edgePadding,\n            ranksep: settings.rankPadding,\n            nodesep: settings.nodePadding,\n            align: settings.align,\n            acyclicer: settings.acyclicer,\n            ranker: settings.ranker,\n            multigraph: settings.multigraph,\n            compound: settings.compound\n        });\n\n        dagreGraph.setDefaultEdgeLabel(() => { });\n\n        // update all dagre nodes\n        this.dagreNodes = nodes.map(n => {\n            const node: any = Object.assign({}, n);\n            node.width = n.dimension.w || 20;\n            node.height = n.dimension.h || 20;\n            node.x = n.position.x;\n            node.y = n.position.y;\n            return node;\n        });\n        this.dagreNodes.forEach((n: any) => dagreGraph.setNode(n.id, n));\n\n        // update all dagre edges\n        this.dagreEdges = edges;\n        this.dagreEdges.forEach((e: any) => {\n            const args = settings.multigraph ? [e.source, e.target, e, e.id] : [e.source, e.target];\n            dagreGraph.setEdge(...args);\n        });\n\n        return dagreGraph;\n    }\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/interface/loom.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a directed edge within the graph structure.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                line\n                            \n                            \n                                    Public\n                                points\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                textPath\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : nanoid()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:37\n                        \n                    \n\n            \n                \n                    A unique id, generated by nanoid(), used to differentiate this edge from others.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:49\n                        \n                    \n\n            \n                \n                    The text label for this edge.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        line\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:57\n                        \n                    \n\n            \n                \n                    The SVG string which describes the path for rendering the edge.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:53\n                        \n                    \n\n            \n                \n                    A sequence of points used to generate the 'line' property.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:41\n                        \n                    \n\n            \n                \n                    The id of the node this edge starts from.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:45\n                        \n                    \n\n            \n                \n                    The id of the node this edge ends at.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        textPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { WritableSignal } from \"@angular/core\";\nimport { nanoid } from \"nanoid\"\n\n/**\n * Represents a node within the graph structure. \n */\nexport class Node {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this node from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The x and y position for this node. \n     */\n    public position: { x: number, y: number } = { x: 0, y: 0 };\n    /**\n     * The width and height for this node. \n     */\n    public dimension: { w: number, h: number } = { w: 20, h: 20 };\n    /**\n     * The text label for this node. \n     */\n    public label: string = \"\";\n    /**\n     * The css string which transforms the node to be in the correct position on the SVG.\n     */\n    public transform: string = \"\";\n};\n\n/**\n * Represents a directed edge within the graph structure.\n */\nexport class Edge {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this edge from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The id of the node this edge starts from.\n     */\n    public source: string = \"\";\n    /**\n     * The id of the node this edge ends at.\n     */\n    public target: string = \"\";\n    /**\n     * The text label for this edge.\n     */\n    public label: string = \"\";\n    /**\n     * A sequence of points used to generate the 'line' property.\n     */\n    public points: { x: number, y: number }[] = [];\n    /**\n     * The SVG string which describes the path for rendering the edge.\n     */\n    public line: string = \"\";\n    public textPath: any;\n};\n\n/**\n * The interface for a 'Layout' which is used by the GraphComponent to actually render the graph.\n */\nexport interface Layout {\n    /**\n     * The settings for the layout.\n     */\n    settings?: any;\n\n    /**\n     *\n     * @param graph\n     */\n    run(nodes: Node[], edges: Edge[]): WritableSignal;\n\n    /**\n     *\n     * @param graph\n     * @param edge\n     */\n    updateEdge(nodes: Node[], edges: Edge[], edge: Edge): WritableSignal;\n};\n\n\n/**\n * Utilized internally in the Loom Component to simplify calculations for transforms relating to zooming and panning. \n */\nexport interface Matrix {\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number\n};\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Layout.html":{"url":"interfaces/Layout.html","title":"interface - Layout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Layout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/interface/loom.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface for a 'Layout' which is used by the GraphComponent to actually render the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            settings\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        run\n                                    \n                                \n                                \n                                    \n                                        updateEdge\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun(nodes: Node[], edges: Edge[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n                                            \n                                                            Node[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                edges\n                                            \n                                                            Edge[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEdge\n                        \n                    \n                \n            \n            \n                \nupdateEdge(nodes: Node[], edges: Edge[], edge: Edge)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n                                            \n                                                            Node[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                edges\n                                            \n                                                            Edge[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                edge\n                                            \n                                                            Edge\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     WritableSignal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The settings for the layout.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { WritableSignal } from \"@angular/core\";\nimport { nanoid } from \"nanoid\"\n\n/**\n * Represents a node within the graph structure. \n */\nexport class Node {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this node from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The x and y position for this node. \n     */\n    public position: { x: number, y: number } = { x: 0, y: 0 };\n    /**\n     * The width and height for this node. \n     */\n    public dimension: { w: number, h: number } = { w: 20, h: 20 };\n    /**\n     * The text label for this node. \n     */\n    public label: string = \"\";\n    /**\n     * The css string which transforms the node to be in the correct position on the SVG.\n     */\n    public transform: string = \"\";\n};\n\n/**\n * Represents a directed edge within the graph structure.\n */\nexport class Edge {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this edge from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The id of the node this edge starts from.\n     */\n    public source: string = \"\";\n    /**\n     * The id of the node this edge ends at.\n     */\n    public target: string = \"\";\n    /**\n     * The text label for this edge.\n     */\n    public label: string = \"\";\n    /**\n     * A sequence of points used to generate the 'line' property.\n     */\n    public points: { x: number, y: number }[] = [];\n    /**\n     * The SVG string which describes the path for rendering the edge.\n     */\n    public line: string = \"\";\n    public textPath: any;\n};\n\n/**\n * The interface for a 'Layout' which is used by the GraphComponent to actually render the graph.\n */\nexport interface Layout {\n    /**\n     * The settings for the layout.\n     */\n    settings?: any;\n\n    /**\n     *\n     * @param graph\n     */\n    run(nodes: Node[], edges: Edge[]): WritableSignal;\n\n    /**\n     *\n     * @param graph\n     * @param edge\n     */\n    updateEdge(nodes: Node[], edges: Edge[], edge: Edge): WritableSignal;\n};\n\n\n/**\n * Utilized internally in the Loom Component to simplify calculations for transforms relating to zooming and panning. \n */\nexport interface Matrix {\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Matrix.html":{"url":"interfaces/Matrix.html","title":"interface - Matrix","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Matrix\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/interface/loom.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Utilized internally in the Loom Component to simplify calculations for transforms relating to zooming and panning.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            a\n                                        \n                                \n                                \n                                        \n                                            b\n                                        \n                                \n                                \n                                        \n                                            c\n                                        \n                                \n                                \n                                        \n                                            d\n                                        \n                                \n                                \n                                        \n                                            e\n                                        \n                                \n                                \n                                        \n                                            f\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        a\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        a:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        d\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        d:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        e\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        e:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        f\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        f:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WritableSignal } from \"@angular/core\";\nimport { nanoid } from \"nanoid\"\n\n/**\n * Represents a node within the graph structure. \n */\nexport class Node {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this node from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The x and y position for this node. \n     */\n    public position: { x: number, y: number } = { x: 0, y: 0 };\n    /**\n     * The width and height for this node. \n     */\n    public dimension: { w: number, h: number } = { w: 20, h: 20 };\n    /**\n     * The text label for this node. \n     */\n    public label: string = \"\";\n    /**\n     * The css string which transforms the node to be in the correct position on the SVG.\n     */\n    public transform: string = \"\";\n};\n\n/**\n * Represents a directed edge within the graph structure.\n */\nexport class Edge {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this edge from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The id of the node this edge starts from.\n     */\n    public source: string = \"\";\n    /**\n     * The id of the node this edge ends at.\n     */\n    public target: string = \"\";\n    /**\n     * The text label for this edge.\n     */\n    public label: string = \"\";\n    /**\n     * A sequence of points used to generate the 'line' property.\n     */\n    public points: { x: number, y: number }[] = [];\n    /**\n     * The SVG string which describes the path for rendering the edge.\n     */\n    public line: string = \"\";\n    public textPath: any;\n};\n\n/**\n * The interface for a 'Layout' which is used by the GraphComponent to actually render the graph.\n */\nexport interface Layout {\n    /**\n     * The settings for the layout.\n     */\n    settings?: any;\n\n    /**\n     *\n     * @param graph\n     */\n    run(nodes: Node[], edges: Edge[]): WritableSignal;\n\n    /**\n     *\n     * @param graph\n     * @param edge\n     */\n    updateEdge(nodes: Node[], edges: Edge[], edge: Edge): WritableSignal;\n};\n\n\n/**\n * Utilized internally in the Loom Component to simplify calculations for transforms relating to zooming and panning. \n */\nexport interface Matrix {\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/mousewheel.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive to add more options to the mouse wheel events.\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mouseWheel]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                            \n                                    \n                                onMouseWheelChrome\n                            \n                            \n                                    \n                                onMouseWheelFirefox\n                            \n                            \n                                    \n                                onMouseWheelIE\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:19\n                            \n                        \n                \n                    \n                        Emits events wheen the mouse wheel is scrolled down.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:14\n                            \n                        \n                \n                    \n                        Emits events when the mouse wheel is scrolled up.\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:35\n                \n            \n\n\n            \n                \n                    Listens for mousewheel on Firefox\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:26\n                \n            \n\n\n            \n                \n                    Listens for mousewheel on Chrome\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:44\n                \n            \n\n\n            \n                \n                    Listens for mousewheel on IE\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mouseWheelFunc\n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:53\n                        \n                    \n\n\n            \n                \n                        Convert all mousewheel events above to a standard form to be emitted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the event that was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseWheelChrome\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseWheelChrome(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mousewheel', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:26\n                        \n                    \n\n\n            \n                \n                        Listens for mousewheel on Chrome\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseWheelFirefox\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseWheelFirefox(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('DOMMouseScroll', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:35\n                        \n                    \n\n\n            \n                \n                        Listens for mousewheel on Firefox\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseWheelIE\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseWheelIE(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('onmousewheel', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-loom/src/lib/mousewheel.directive.ts:44\n                        \n                    \n\n\n            \n                \n                        Listens for mousewheel on IE\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n\n/**\n * A directive to add more options to the mouse wheel events.\n * \n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n */\n@Directive({ selector: '[mouseWheel]', standalone: true })\nexport class MouseWheelDirective {\n    /**\n     * Emits events when the mouse wheel is scrolled up.\n     */\n    @Output() mouseWheelUp = new EventEmitter();\n\n    /**\n     * Emits events wheen the mouse wheel is scrolled down.\n     */\n    @Output() mouseWheelDown = new EventEmitter();\n\n    /**\n     * Listens for mousewheel on Chrome\n     * @param event \n     */\n    @HostListener('mousewheel', ['$event'])\n    onMouseWheelChrome(event: any) {\n        this.mouseWheelFunc(event);\n    }\n\n    /**\n     * Listens for mousewheel on Firefox\n     * @param event \n     */\n    @HostListener('DOMMouseScroll', ['$event'])\n    onMouseWheelFirefox(event: any) {\n        this.mouseWheelFunc(event);\n    }\n\n    /**\n     * Listens for mousewheel on IE\n     * @param event \n     */\n    @HostListener('onmousewheel', ['$event'])\n    onMouseWheelIE(event: any) {\n        this.mouseWheelFunc(event);\n    }\n\n    /**\n     * Convert all mousewheel events above to a standard form to be emitted.\n     * \n     * @param { any } event the event that was fired\n     */\n    mouseWheelFunc(event: any) {\n        var event = window.event || event; // old IE support\n        var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n\n        if (delta > 0) {\n            this.mouseWheelUp.emit(event);\n        } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-loom/src/lib/interface/loom.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a node within the graph structure.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dimension\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                position\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dimension\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { w: 20, h: 20 }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:19\n                        \n                    \n\n            \n                \n                    The width and height for this node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : nanoid()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:11\n                        \n                    \n\n            \n                \n                    A unique id, generated by nanoid(), used to differentiate this node from others.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:23\n                        \n                    \n\n            \n                \n                    The text label for this node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:15\n                        \n                    \n\n            \n                \n                    The x and y position for this node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-loom/src/lib/interface/loom.interface.ts:27\n                        \n                    \n\n            \n                \n                    The css string which transforms the node to be in the correct position on the SVG.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { WritableSignal } from \"@angular/core\";\nimport { nanoid } from \"nanoid\"\n\n/**\n * Represents a node within the graph structure. \n */\nexport class Node {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this node from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The x and y position for this node. \n     */\n    public position: { x: number, y: number } = { x: 0, y: 0 };\n    /**\n     * The width and height for this node. \n     */\n    public dimension: { w: number, h: number } = { w: 20, h: 20 };\n    /**\n     * The text label for this node. \n     */\n    public label: string = \"\";\n    /**\n     * The css string which transforms the node to be in the correct position on the SVG.\n     */\n    public transform: string = \"\";\n};\n\n/**\n * Represents a directed edge within the graph structure.\n */\nexport class Edge {\n    /**\n     * A unique id, generated by nanoid(), used to differentiate this edge from others.\n     */\n    public id: string = nanoid();\n    /**\n     * The id of the node this edge starts from.\n     */\n    public source: string = \"\";\n    /**\n     * The id of the node this edge ends at.\n     */\n    public target: string = \"\";\n    /**\n     * The text label for this edge.\n     */\n    public label: string = \"\";\n    /**\n     * A sequence of points used to generate the 'line' property.\n     */\n    public points: { x: number, y: number }[] = [];\n    /**\n     * The SVG string which describes the path for rendering the edge.\n     */\n    public line: string = \"\";\n    public textPath: any;\n};\n\n/**\n * The interface for a 'Layout' which is used by the GraphComponent to actually render the graph.\n */\nexport interface Layout {\n    /**\n     * The settings for the layout.\n     */\n    settings?: any;\n\n    /**\n     *\n     * @param graph\n     */\n    run(nodes: Node[], edges: Edge[]): WritableSignal;\n\n    /**\n     *\n     * @param graph\n     * @param edge\n     */\n    updateEdge(nodes: Node[], edges: Edge[], edge: Edge): WritableSignal;\n};\n\n\n/**\n * Utilized internally in the Loom Component to simplify calculations for transforms relating to zooming and panning. \n */\nexport interface Matrix {\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number\n};\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-loom/src/lib/interface/loom.interface.ts\n            \n            class\n            Edge\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/interface/loom.interface.ts\n            \n            class\n            Node\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/interface/loom.interface.ts\n            \n            interface\n            Layout\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/interface/loom.interface.ts\n            \n            interface\n            Matrix\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/layouts/dagre.layout.ts\n            \n            class\n            DagreLayout\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/layouts/dagre.layout.ts\n            \n            interface\n            DagreSettings\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/loom/loom.component.ts\n            \n            component\n            LoomComponent\n            \n                92 %\n                (38/41)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/mousewheel.directive.ts\n            \n            directive\n            MouseWheelDirective\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ngx-loom/src/lib/utils.ts\n            \n            variable\n            constrain\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            d3 : ^7.8.5\n        \n            dagre : ^0.8.5\n        \n            nanoid : ^5.0.7\n        \n            rxjs : ~7.8.0\n        \n            transformation-matrix : ^2.16.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Alignment   (projects/.../dagre.layout.ts)\n                        \n                        \n                            Orientation   (projects/.../dagre.layout.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-loom/src/lib/layouts/dagre.layout.ts\n    \n        \n            \n                \n                    \n                        \n                        Alignment\n                    \n                \n                    \n                        \n                            Enum for options of how Dagre can align the graph.\n\n                        \n                    \n                        \n                            \n                                 CENTER\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 UP_LEFT\n                            \n                        \n                        \n                            \n                                Value : UL\n                            \n                        \n                        \n                            \n                                 UP_RIGHT\n                            \n                        \n                        \n                            \n                                Value : UR\n                            \n                        \n                        \n                            \n                                 DOWN_LEFT\n                            \n                        \n                        \n                            \n                                Value : DL\n                            \n                        \n                        \n                            \n                                 DOWN_RIGHT\n                            \n                        \n                        \n                            \n                                Value : DR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Orientation\n                    \n                \n                    \n                        \n                            Enum for options of how Dagre can orient the graph.\n\n                        \n                    \n                        \n                            \n                                 LEFT_TO_RIGHT\n                            \n                        \n                        \n                            \n                                Value : LR\n                            \n                        \n                        \n                            \n                                 RIGHT_TO_LEFT\n                            \n                        \n                        \n                            \n                                Value : RL\n                            \n                        \n                        \n                            \n                                 TOP_TO_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : TB\n                            \n                        \n                        \n                            \n                                 BOTTOM_TO_TOM\n                            \n                        \n                        \n                            \n                                Value : BT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-loom\n\n\nngx-loom is an Angular 17 compatible library with the sole purpose of easily rendering directed graph structures. \nInstallation\nTo install, utilize the command npm i ngx-loom. \nFeatures\nngx-loom currently provides the following features: \n\nAbility to render directed (or undirected) graph structures.\nAbility to overwrite the default node and edge display styles utilizing ng-templates.\nAbility to pan and zoom the displayed graph.\nAbility to implement custom 'layouts', which allows replacing the default rendering engine.\nAbility to bind to output events raised when a graph node or edge is clicked.\nAbility to center and auto-zoom the graph utilizing exposed methods.\n\nDevelopment Setup\nTo setup for development, run the following commands within a Linux terminal. \nExample :git clone \"https://github.com/Sn00pyW00dst0ck/ng-loom.git\"\ncd ng-loom\nnpm iBuild & Run\nThere are five npm scripts available to build and run ngx-loom and its demo application. \n\nbuild:demo:dev - Builds the demo application with development configuration. \nbuild:demo:prod - Builds the demo applicaiton with production configuration.\nbuild:loom:dev - Builds the ngx-loom project with development configuration.\nbuild:loom:prod - Builds the ngx-loom project with production configuration.\nserve:demo - Serves the demo application to localhost.\n\n\n[!NOTE]\nIn order to build the demo application, first the ngx-loom project must be built. Without completing this step, building the demo application may fail. \n\nTest\nThere are four npm scripts available to test ngx-loom and its demo application. \n\ntest:demo - Runs unit tests for the demo application. \ntest:demo:headless - Runs unit tests for the demo application within headless mode. \ntest:loom - Runs unit tests for the ngx-loom project.\ntest:loom:headless - Runs unit tests for the ngx-loom project within headless mode.\n\nDocumentation\nDocumentation for ngx-loom is created utilizing Compodoc. There are two provided npm scripts to generate documentation, or you can view the docs at this page. \n\ncompodoc:build - Builds the documentation to a directory /documentation.\ncompodoc:serve - Builds and serves the documentation to localhost:5555.\n\n\n[!NOTE]\nDocumentation is not generated for the loom-demo project, only ngx-loom. Documentation is not 100% comprehensive, but will improve with time.\n\n\nThis project was generated with Angular CLI version 17.3.6.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Gabriel Aldous\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            constrain   (projects/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-loom/src/lib/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constrain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (min: number, value: number, max: number): number => ((value = max) ? max : value)\n                    \n                \n\n            \n                \n                    Constrains a given value within a given min and max value.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
